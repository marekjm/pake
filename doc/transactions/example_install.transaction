# This is an example of install transaction
#
# Explanations:
#
#   * package 'foo' is our desired package,
#   * it has two dependencies - 'bar' and 'baz'
#   * we know that 'foo' will play nicely with every version of 'bar'
#   * we know that 'foo' requires version '2.4.8-patch.16' of 'baz'
#   * we know that 'foo' and 'bar' are hosted on the same node: http://pake.example.org
#   * we know that 'baz' is hosted on different node, http://pake.beispiel.org
#
# With this information available, let us craft an install transaction.
#
# **NOTICE:** to developers - you can craft such transactions and
# give it to people who want to use your software.
# By creating them yourself you will always be sure that your software will
# work as you can include URL and version.
# URLs and packages may even be unknown to the user's network but since
# PAKE assumes that transactions are finalized and sane it will just compose
# requests that will have all needed info!
# Great news, isn't it?

# 1. Fetch required dependencies
# we must include VERSION because 'foo' is compatible with only one, specific version
PKG FETCH 'baz' VERSION '2.4.8-patch.16' FROM 'http://pake.beispiel.org'
# we can skip version here since we know that every version will do
PKG FETCH 'bar' FROM 'http://pake.example.org'

# 2. Fetch desired package
# we can skip version here since PAKE will download the latest
PKG FETCH 'foo' FROM 'http://pake.example.org'

# 3. Install dependencies
# we need to specify version because 'foo' relies on '2.4.8-patch.16'
PKG INSTALL 'baz' VERSION '2.4.8-patch.16'
# we don't have to specify version since 'foo' is compatible with every version of 'bar'
PKG INSTALL 'bar'

# 4. Install desired package
# no need to specify version - PAKE will install newest one
PKG INSTALL 'foo'
